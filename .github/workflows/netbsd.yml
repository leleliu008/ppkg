name: NetBSD

on:
  push:
    branches: [ c ]
  pull_request:
    branches: [ c ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        netbsd-version: ['10.0', '9.4', '9.3', '9.2']

    steps:
      - uses: actions/checkout@v4

      - run: curl -LO https://curl.se/ca/cacert.pem

      - uses: cross-platform-actions/action@v0.25.0
        with:
          operating_system: netbsd
          version: ${{ matrix.netbsd-version }}
          shell: bash
          run: |
            run() {
              printf "\033[0;35m==>\033[0m \033[0;32m%b\n\033[0m" "$*"
              eval "$@"
            }

            run sudo pkgin -y install cmake ninja-build pkg-config clang curl libgit2 libarchive libyaml jansson

            run export SSL_CERT_FILE="$PWD/cacert.pem"
            run export LD_LIBRARY_PATH=/usr/pkg/lib

            run cmake -S . -B   build.d -G Ninja -DCMAKE_INSTALL_PREFIX=./output -DCMAKE_VERBOSE_MAKEFILE=ON
            run cmake --build   build.d
            run cmake --install build.d


            run ./output/bin/ppkg

            run ./output/bin/ppkg --help
            run ./output/bin/ppkg -h

            run ./output/bin/ppkg --version
            run ./output/bin/ppkg -V

            run ./output/bin/ppkg setup -v

            run ./output/bin/ppkg about
            run ./output/bin/ppkg about -v

            run ./output/bin/ppkg integrate zsh
            run ./output/bin/ppkg integrate zsh -v

            run ./output/bin/ppkg update

            run ./output/bin/ppkg search lib
            run ./output/bin/ppkg search zip

            run ./output/bin/ppkg info-available libzip
            run ./output/bin/ppkg info-available libzip --yaml
            run ./output/bin/ppkg info-available libzip --json
            run ./output/bin/ppkg info-available libzip summary
            run ./output/bin/ppkg info-available libzip version
            run ./output/bin/ppkg info-available libzip license
            run ./output/bin/ppkg info-available libzip web-url
            run ./output/bin/ppkg info-available libzip src-url
            run ./output/bin/ppkg info-available libzip src-sha

            run ./output/bin/ppkg depends libzip
            run ./output/bin/ppkg depends libzip -t dot
            run ./output/bin/ppkg depends libzip -t box

            run ./output/bin/ppkg fetch gzip
            run ./output/bin/ppkg fetch gsed -v

            run ./output/bin/ppkg install libzip

            run ./output/bin/ppkg tree libzip

            run ./output/bin/ppkg info-installed libzip --prefix
            run ./output/bin/ppkg info-installed libzip --files
            run ./output/bin/ppkg info-installed libzip --json
            run ./output/bin/ppkg info-installed libzip --yaml
            run ./output/bin/ppkg info-installed libzip builtat
            run ./output/bin/ppkg info-installed libzip builtat-iso-8601
            run ./output/bin/ppkg info-installed libzip builtat-rfc-3339
            run ./output/bin/ppkg info-installed libzip version

            run ./output/bin/ppkg pack libzip
            run ./output/bin/ppkg pack libzip -t tar.gz
            run ./output/bin/ppkg pack libzip -t tar.lz
            run ./output/bin/ppkg pack libzip -t tar.xz
            run ./output/bin/ppkg pack libzip -t tar.bz2
            run ./output/bin/ppkg pack libzip -t zip

            printf '%s\n' 'version: 1000' >> ~/.ppkg/repos.d/official-core/formula/libzip.yml

            run ./output/bin/ppkg ls-available
            run ./output/bin/ppkg ls-installed
            run ./output/bin/ppkg ls-outdated

            run ./output/bin/ppkg is-available libzip
            run ./output/bin/ppkg is-installed libzip
            run ./output/bin/ppkg is-outdated  libzip

            run ./output/bin/ppkg upgrade   libzip
            run ./output/bin/ppkg reinstall libzip
            run ./output/bin/ppkg uninstall libzip

            run ./output/bin/ppkg formula-repo-list
            run ./output/bin/ppkg formula-repo-add my_repo https://github.com/leleliu008/ppkg-formula-repository-official-core
            run ./output/bin/ppkg formula-repo-del my_repo

            run ./output/bin/ppkg cleanup

            #run ./output/bin/ppkg upgrade-self

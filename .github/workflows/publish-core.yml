name: publish ppkg core

on:
  workflow_dispatch:

jobs:

  base:
    runs-on: ubuntu-latest

    steps:

      - id:  calculate-release-version
        run: |
          RELEASE_VERSION="$(date +%Y.%m.%d)"

          printf 'RELEASE_VERSION=%s\n' "$RELEASE_VERSION" >> "$GITHUB_OUTPUT"

    outputs:
      release-version: ${{ steps.calculate-release-version.outputs.RELEASE_VERSION }}


  macos:
    needs: base

    runs-on: macos-14

    strategy:
      fail-fast: false
      matrix:
        target-version: ['10.15', '11.0', '12.0', '13.0', '14.0', '15.0']
        target-arch: [x86_64, arm64]

    steps:
      - uses: actions/checkout@v4

      - run: install -d out/

      - run: mv fonts.conf out/

      - run: |
          set -ex

          CC="$(xcrun --sdk macosx --find clang)"
          SYSROOT="$(xcrun --sdk macosx --show-sdk-path)"
          CFLAGS="-isysroot $SYSROOT -mmacosx-version-min=${{ matrix.target-version }} -arch ${{ matrix.target-arch }} -Qunused-arguments"

          rm check-if-has-dynamic-section.c list-section-names.c print-*-if-present.c wrapper-template.c

          for f in *.c
          do
            o="out/${f%.c}"
            $CC $CFLAGS -std=c99 -Os -flto -o "$o" "$f"
            strip "$o"
          done

      - run: curl -LO https://raw.githubusercontent.com/adobe-fonts/source-code-pro/release/OTF/SourceCodePro-Light.otf

      - run: ./ppkg setup
      - run: ./ppkg update
      - run: ./ppkg install macos-${{ matrix.target-version }}-${{ matrix.target-arch }}/uppm@0.15.4
      - run: ./ppkg bundle  macos-${{ matrix.target-version }}-${{ matrix.target-arch }}/uppm@0.15.4 .tar.xz

      - run: tar vxf uppm*.tar.xz -C out --strip-components=1
      - run: mv out/bin/uppm out/
      - run: rm -rf out/bin
      - run: rm -rf out/share
      - run: rm -rf out/.ppkg
      - run: mv *.otf out/

      - run: |
          DIRNAME="ppkg-core-${{ needs.base.outputs.release-version }}-macos-${{ matrix.target-version }}-${{ matrix.target-arch }}"
          mv out "$DIRNAME"
          tar cJvf "$DIRNAME.tar.xz" "$DIRNAME"

      - uses: actions/upload-artifact@v4
        with:
          name: ppkg-core-macos-${{ matrix.target-version }}-${{ matrix.target-arch }}.tar.xz
          path: ppkg-core-*.tar.xz


  linux:
    needs: base

    strategy:
      fail-fast: false
      matrix:
        target-arch: [loongarch64, x86_64, aarch64, riscv64, ppc64le, s390x]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - run: |
          cat > run.sh <<EOF
          set -e

          COLOR_GREEN='\033[0;32m'        # Green
          COLOR_PURPLE='\033[0;35m'       # Purple
          COLOR_OFF='\033[0m'             # Reset

          echo() {
              printf '%b\n' "\$*"
          }

          run() {
              echo "\${COLOR_PURPLE}==>\${COLOR_OFF} \${COLOR_GREEN}\$@\${COLOR_OFF}"
              eval "\$*"
          }

          run uname -a

          run apk update
          run apk add curl tar xz g++ libc-dev linux-headers

          for item in *.c
          do
            gcc -std=c99 -Os -flto -Wl,-s -static -o "\${item%.c}.exe" "\$item"
          done

          export GITHUB_ACTIONS=true

          run ./ppkg setup --syspm
          run ./ppkg update
          run ./build-core.sh
          run ./ppkg install uppm@0.15.4 --static
          run ./ppkg bundle  uppm@0.15.4 .tar.xz
          EOF

      - run: curl -LO https://raw.githubusercontent.com/alpinelinux/alpine-chroot-install/master/alpine-chroot-install
      - run: chmod +x alpine-chroot-install
      - run: sudo ./alpine-chroot-install -d /alpine-rootfs -a ${{ matrix.target-arch }}
      - run: /alpine-rootfs/enter-chroot /bin/sh run.sh

      - run: curl -LO https://raw.githubusercontent.com/adobe-fonts/source-code-pro/release/OTF/SourceCodePro-Light.otf

      - run: install -d    out/
      - run: mv *.otf      out/
      - run: mv fonts.conf out/

      - run: ls

      - run: |
          for item in *.exe
          do
            mv "$item" "out/${item%.exe}"
          done

      - run: tar vxf uppm*.tar.xz -C out --strip-components=1
      - run: mv out/bin/uppm out/
      - run: rm -rf out/bin/ out/share/ out/.ppkg/

      - run: |
          DIRNAME="ppkg-core-${{ needs.base.outputs.release-version }}-linux-${{ matrix.target-arch }}"
          mv out "$DIRNAME"
          tar cJvf "$DIRNAME.tar.xz" "$DIRNAME"

      - uses: actions/upload-artifact@v4
        with:
          name: ppkg-core---linux-${{ matrix.target-arch }}.tar.xz
          path: ppkg-core-*-linux-${{ matrix.target-arch }}.tar.xz


  dragonflybsd:
    needs: base

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        dragonflybsd-version: ['6.4']

    steps:
      - uses: actions/checkout@v4

      - run: install -d out/

      - run: mv fonts.conf out/

      - run: curl -LO https://raw.githubusercontent.com/adobe-fonts/source-code-pro/release/OTF/SourceCodePro-Light.otf
      - run: mv *.otf out/

      - uses: vmactions/dragonflybsd-vm@v1
        with:
          release: "${{ matrix.dragonflybsd-version }}.0"
          usesh: true
          sync: rsync
          copyback: true
          run: |
            run() {
              printf "\033[0;35m==>\033[0m \033[0;32m%b\n\033[0m" "$*"
              eval "$@"
            }

            run ./ppkg setup --syspm
            run ./ppkg update
            run ./ppkg install uppm@0.15.4 --static
            run ./ppkg bundle  uppm@0.15.4 .tar.xz

            for item in *.c
            do
              cc -std=c99 -Os -flto -Wl,-s -static -o "out/${item%.c}" "$item"
            done

      - run: tar vxf uppm*.tar.xz -C out --strip-components=1
      - run: mv out/bin/uppm out/
      - run: rm -rf out/bin
      - run: rm -rf out/share
      - run: rm -rf out/.ppkg

      - run: |
          DIRNAME="ppkg-core-${{ needs.base.outputs.release-version }}-dragonflybsd-${{ matrix.dragonflybsd-version }}-x86_64"
          mv out "$DIRNAME"
          tar cJvf "$DIRNAME.tar.xz" "$DIRNAME"

      - uses: actions/upload-artifact@v4
        with:
          name: ppkg-core---dragonflybsd-${{ matrix.dragonflybsd-version }}-x86_64.tar.xz
          path: ppkg-core-*-dragonflybsd-${{ matrix.dragonflybsd-version }}-x86_64.tar.xz


  freebsd:
    needs: base

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        freebsd-version: ['14.2', '14.1', '14.0', '13.4', '13.3', '13.2']
        # https://archive.freebsd.org/old-releases/amd64/

    steps:
      - uses: actions/checkout@v4

      - run: install -d out/

      - run: mv fonts.conf out/

      - run: curl -LO https://raw.githubusercontent.com/adobe-fonts/source-code-pro/release/OTF/SourceCodePro-Light.otf
      - run: mv *.otf out/

      - uses: cross-platform-actions/action@master
        with:
          operating_system: freebsd
          version: ${{ matrix.freebsd-version }}
          shell: bash
          run: |
            run() {
              printf "\033[0;35m==>\033[0m \033[0;32m%b\n\033[0m" "$*"
              eval "$@"
            }

            run ./ppkg setup --syspm
            run ./ppkg update
            run ./ppkg install uppm@0.15.4 --static --profile=debug
            run ./ppkg bundle  uppm@0.15.4 .tar.xz

            for item in *.c
            do
              cc -std=c99 -Os -flto -Wl,-s -static -o "out/${item%.c}" "$item"
            done

      - run: tar vxf uppm*.tar.xz -C out --strip-components=1
      - run: mv out/bin/uppm out/
      - run: rm -rf out/bin
      - run: rm -rf out/share
      - run: rm -rf out/.ppkg

      - run: |
          DIRNAME="ppkg-core-${{ needs.base.outputs.release-version }}-freebsd-${{ matrix.freebsd-version }}-amd64"
          mv out "$DIRNAME"
          tar cJvf "$DIRNAME.tar.xz" "$DIRNAME"

      - uses: actions/upload-artifact@v4
        with:
          name: ppkg-core---freebsd-${{ matrix.freebsd-version }}-amd64.tar.xz
          path: ppkg-core-*-freebsd-${{ matrix.freebsd-version }}-amd64.tar.xz


  openbsd:
    needs: base

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        openbsd-version: ['7.6', '7.5', '7.4', '7.3', '7.2']
        # https://cdn.openbsd.org/pub/OpenBSD/

    steps:
      - uses: actions/checkout@v4

      - run: install -d out/

      - run: mv fonts.conf out/

      - run: curl -LO https://raw.githubusercontent.com/adobe-fonts/source-code-pro/release/OTF/SourceCodePro-Light.otf
      - run: mv *.otf out/

      - uses: cross-platform-actions/action@master
        with:
          operating_system: openbsd
          version: ${{ matrix.openbsd-version }}
          shell: bash
          run: |
            run() {
              printf "\033[0;35m==>\033[0m \033[0;32m%b\n\033[0m" "$*"
              eval "$@"
            }

            run ./ppkg setup  --syspm
            run ./ppkg update
            run ./ppkg install uppm@0.15.4
            run ./ppkg bundle  uppm@0.15.4 .tar.xz

            for item in *.c
            do
              cc -std=c99 -Os -flto -Wl,-s -static -o "out/${item%.c}" "$item"
            done

      - run: tar vxf uppm*.tar.xz -C out --strip-components=1
      - run: mv out/bin/uppm out/
      - run: rm -rf out/bin
      - run: rm -rf out/share
      - run: rm -rf out/.ppkg

      - run: |
          DIRNAME="ppkg-core-${{ needs.base.outputs.release-version }}-openbsd-${{ matrix.openbsd-version }}-amd64"
          mv out "$DIRNAME"
          tar cJvf "$DIRNAME.tar.xz" "$DIRNAME"

      - uses: actions/upload-artifact@v4
        with:
          name: ppkg-core---openbsd-${{ matrix.openbsd-version }}-amd64.tar.xz
          path: ppkg-core-*-openbsd-${{ matrix.openbsd-version }}-amd64.tar.xz


  netbsd:
    needs: base

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        netbsd-version: ['10.0', '9.4', '9.3', '9.2']
        # https://ftp.netbsd.org/pub/NetBSD/

    steps:
      - uses: actions/checkout@v4

      - run: curl -LO https://curl.se/ca/cacert.pem

      - run: install -d out/

      - run: mv fonts.conf out/

      - run: curl -LO https://raw.githubusercontent.com/adobe-fonts/source-code-pro/release/OTF/SourceCodePro-Light.otf
      - run: mv *.otf out/

      - uses: cross-platform-actions/action@v0.25.0
        with:
          operating_system: netbsd
          version: ${{ matrix.netbsd-version }}
          shell: bash
          run: |
            run() {
              printf "\033[0;35m==>\033[0m \033[0;32m%b\n\033[0m" "$*"
              eval "$@"
            }

            run export SSL_CERT_FILE="$PWD/cacert.pem"

            run ./ppkg setup --syspm
            run ./ppkg update
            run ./ppkg install uppm@0.15.4 --static
            run ./ppkg bundle  uppm@0.15.4 .tar.xz

            for item in *.c
            do
              cc -std=c99 -Os -flto -Wl,-s -static -o "out/${item%.c}" "$item"
            done

      - run: tar vxf uppm*.tar.xz -C out --strip-components=1
      - run: mv out/bin/uppm out/
      - run: rm -rf out/bin
      - run: rm -rf out/share
      - run: rm -rf out/.ppkg

      - run: |
          DIRNAME="ppkg-core-${{ needs.base.outputs.release-version }}-netbsd-${{ matrix.netbsd-version }}-amd64"
          mv out "$DIRNAME"
          tar cJvf "$DIRNAME.tar.xz" "$DIRNAME"

      - uses: actions/upload-artifact@v4
        with:
          name: ppkg-core---netbsd-${{ matrix.netbsd-version }}-amd64.tar.xz
          path: ppkg-core-*-netbsd-${{ matrix.netbsd-version }}-amd64.tar.xz


  publish:

    needs: [base, linux, macos, dragonflybsd, freebsd, openbsd, netbsd]

    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ github.token }}

    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: '*'
          path: .
          merge-multiple: true

      - run: ls -a

      # to avaid: failed to run git: fatal: not a git repository (or any of the parent directories): .git
      - run: git -c init.defaultBranch=master init
      - run: git remote add origin ${{ github.repositoryUrl }}

      - run: |
          cat > notes.md <<EOF
          sha256sum:

          \`\`\`
          $(sha256sum ppkg-core-*.tar.xz)
          \`\`\`
          EOF

      - run: gh release create ppkg-core-${{ needs.base.outputs.release-version }} ppkg-core-*.tar.xz --title ppkg-core-${{ needs.base.outputs.release-version }} --notes-file notes.md
